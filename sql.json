{	// From VS Code Default: 
	// Place your snippets for sql here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// The rest is from me - Drew Walters ca. 2018
	"SET IdentityInsert": {
		"prefix": "Identity Insert",
		"body": [
			"SET IDENTITY_INSERT $1 ON;",
			"INSERT INTO $1",
			"SELECT * FROM $2",
			"SET IDENTITY_INSERT $1 OFF;"],
			"description": "Snippet for IDENTITY_INSERT block"
	},
	"CREATE Linked SQLServer" : {
		"prefix": "CREATE LinkedSQLServer",
		"body": ["-- Create Linked Server",
				 "EXEC sp_addlinkedserver",     
				 "@server=N'$S1_instance1',",   
				 "@srvproduct=N'',",  
				 "@provider=N'SQLNCLI',",   
				 "@datasrc=N'$S1\\instance1';",
				 "-- Add pass-through login",
				 "EXEC master.dbo.sp_addlinkedsrvlogin",
				 "@rmtsrvname = N'$S1_instance1',",
				 "@useself = N'True',",
				 "@locallogin = NULL;"
				],
		"description": "Create a linked SQL Server connection to a database."
	},
	"CREATE User IN Role": {
		"prefix":"CREATE USER",
		"body": ["USE $AdventureWorks2012;",
				 "CREATE USER $Mary ",
				 "--   FROM LOGIN $Mary",
				 "  WITH DEFAULT_SCHEMA = $dbo;"
			],
		"description": "Create a user with a DEAULT_SCHEMA. Use WITHOUT LOGIN when creating a user account for an application. \n\nRECOMMENDED: GRANT IMPERSONATE."

	},
	"GRANT IMPERSONATE": {
		"prefix":"GRANT IMPERSONATE",
		"body": ["GRANT IMPERSONATE ON USER::$CustomApp TO [$adventureWorks\\ $tengiz0] ;"
			],
		"description": "It is recommended to grant impersonate on a database user when the user does not have a login. Note: A user cannot be dropped until all database principal permissions have been REVOKE. \n\nRECOMMENDED: \n\tCREATE USER, \n\tREVOKE IMPERSONATE."
	},
	"REVOKE IMPERSONATE": {
		"prefix":"REVOKE IMPERSONATE",
		"body": ["REVOKE IMPERSONATE ON USER::$CustomApp TO [$adventureWorks\\ $tengiz0] ;"
			],
		"description": "Use REVOKE IMPERSONATE when you need to drop the database principal permissions for IMPERSONATE on a database user. \n\nRECOMMENDED: GRANT IMPERSONATE."
	},
	"CREATE Login IN Role": {
		"prefix":"CREATE LOGIN",
		"body": ["CREATE LOGIN $Mary ",
				 " WITH PASSWORD = '$PASSWORD' ;",
			],
		"description": "Create a Login with a password."
	},
	"MERGE Statement": {
		"prefix": "MERGE",
		"description": "Performs insert, update, or delete operations on a target table based on the results of a join with a source table. For example, you can synchronize two tables by inserting, updating, or deleting rows in one table based on differences found in the other table.",
		"body": ["MERGE INTO Sales.SalesReason AS Target",
			"USING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))",
			"AS Source (NewName, NewReasonType)",
			"ON Target.Name = Source.NewName",
			"WHEN MATCHED THEN",
			"UPDATE SET ReasonType = Source.NewReasonType",
			"WHEN NOT MATCHED BY TARGET THEN",
			"INSERT (Name, ReasonType) VALUES (NewName, NewReasonType)",
			"OUTPUT Name, \\$action;"]
	}
}

